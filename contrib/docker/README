The intent of this script to allow you use Docker to run Emissary.  The vm is
barebones.  The working directory is shared with the VM, so you would use tools on your
native OS to develop.  The VM will allow you to run maven commands and/or run the
a distribution or development build.

First you must build an image using the Dockerfile.  This requires you to have Docker 
installed.  Go to https://docs.docker.com/ to get started.  The rest of this file 
assumes you have the main docker VM running.
# build an image, from the top level dir of the git clone
cd $EMISSARY_DIR
docker build -t emissary contrib/docker/

# now run an image, again from the emissary directory
docker run -it -v ${PWD}:/var/emissary emissary bash
# or run this to not have to download the entire internet again by reusing the same maven repo
docker run -it -v ${PWD}:/var/emissary -v ~/.m2:/root/.m2 emissary bash
# then in the container, you can do a build
cd /var/emissary
mvn clean test

# if you want to run emissary, you must expose the port.  The following command also sets the name of the container.
# You will have to delete the container to reuse that name
docker run -it -p 8001 -v ${PWD}:/var/emissary --name emissary emissary bash
# now cd to where it is built
cd /var/emissary/
./emissary server
# in another terminal from your host system with the docker variables set (see below), find the port mapping and 
# the ip of the docker machine running the containers.  You should them be able to hit the app from your machine
docker port emissary
#8001/tcp -> 0.0.0.0:32768
docker-machine ip default
#192.168.99.100
# now browse to http://192.168.99.100:32768/emissary and profit

During development of the Dockerfile, I used the following to help clean up messes.
# clean up images
docker images
# call for each image, save the centos6 one so we don't have to download again
docker rmi -f ae589dc6b525
# clean up containers
docker ps --all | awk '{print $1}' | grep -v CONT | xargs docker rm
  
Other useful stuff
# ssh to main VM machine that runs containers
docker-machine ssh default
# setup env in shell
eval $(docker-machine env default)
# ssh into the running container (use docker ps --all to find container id)
docker exec -i -t container_id bash
