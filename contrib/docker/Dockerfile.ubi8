ARG IMG_NAME=redhat/ubi8
ARG IMG_TAG=8.9
FROM ${IMG_NAME}:${IMG_TAG} AS base

ARG java_version=11
ARG user=emissary
ARG group=emissary
ARG uid=1000
ARG gid=1000

ENV JAVA_TOOL_OPTIONS -Dfile.encoding=UTF8
ENV PROJECT_BASE=/opt/emissary

RUN dnf update -y \
     && dnf upgrade -y \
     && rpm --import https://yum.corretto.aws/corretto.key \
     && curl -L -o /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo \
     && dnf install -y java-${java_version}-amazon-corretto-devel \
     && dnf install -y langpacks-en glibc-all-langpacks \
     && groupadd -g ${gid} ${group} \
     && useradd -u ${uid} -g ${group} -m -s /bin/sh ${user} \
     && dnf clean all -y \
     && rm -rf /var/cache/yum



FROM base AS build

ARG maven_version=3.9.6
ARG java_compiler=11
ENV MAVEN_OPTS -Xms512M -Xmx1024M -Xss1M -Djava.awt.headless=true
ENV MAVEN_HOME /opt/maven

RUN curl -L -o /tmp/maven.tar.gz https://dlcdn.apache.org/maven/maven-3/${maven_version}/binaries/apache-maven-${maven_version}-bin.tar.gz \
     && tar xvf /tmp/maven.tar.gz -C /opt \
     && ln -s /opt/apache-maven-${maven_version} ${MAVEN_HOME} \
     && ln -s ${MAVEN_HOME}/bin/mvn /usr/bin/mvn

COPY . ${PROJECT_BASE}
RUN chown -R ${user}:${group} ${PROJECT_BASE} \
    && chmod -R 744 ${PROJECT_BASE}  \
    && (rm -f .mvn-classpath || true)

USER ${user}
WORKDIR ${PROJECT_BASE}
RUN --mount=type=cache,uid=${uid},gid=${gid},target=/home/${user}/.m2 \
    mvn -V -B -e -ntp "-Dstyle.color=always" -Dmaven.compiler.release=${java_compiler} clean verify -Pdist

ARG verify_build=false
RUN if ${verify_build} ; then ./contrib/ci/detect-changes.sh ; fi

FROM base

COPY --from=build ${PROJECT_BASE}/target/emissary-*-dist.tar.gz /tmp

RUN tar -xf /tmp/emissary-*-dist.tar.gz -C /opt/ \
    && version=`ls /opt | grep emissary- | awk '{ print $1 }'`  \
    && echo "Linking /opt/${version} to ${PROJECT_BASE}"  \
    && ln -s /opt/${version} ${PROJECT_BASE}  \
    && mkdir -p ${PROJECT_BASE}/localoutput  \
    && mkdir -p ${PROJECT_BASE}/target/data  \
    && chmod -R a+rw ${PROJECT_BASE} \
    && chown -R ${user}:${group} ${PROJECT_BASE}* \
    && rm -f /tmp/*

USER ${user}

WORKDIR ${PROJECT_BASE}

VOLUME ${PROJECT_BASE}/target/data
VOLUME ${PROJECT_BASE}/localoutput

EXPOSE 8001

ENTRYPOINT ["./emissary"]

CMD ["server", "-a", "2", "-p", "8001"]
